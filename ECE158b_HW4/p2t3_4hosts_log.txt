sudo python mycustom.py
*** Creating network
*** Adding controller
*** Adding hosts:
h1 h2 h3 h4 
*** Adding switches:
s1 
*** Adding links:
(0ms delay 0% loss) (0ms delay 0% loss) (h1, s1) (0ms delay 0% loss) (0ms delay 0% loss) (h2, s1) (0ms delay 0% loss) (0ms delay 0% loss) (h3, s1) (0ms delay 0% loss) (0ms delay 0% loss) (h4, s1) 
*** Configuring hosts
h1 (cfs 25000/100000us) h2 (cfs 25000/100000us) h3 (cfs 25000/100000us) h4 (cfs 25000/100000us) 
###############Single Switch Topo###############
Testing single switch topo:
*** Starting controller
c0 
*** Starting 1 switches
s1 ...(0ms delay 0% loss) (0ms delay 0% loss) (0ms delay 0% loss) (0ms delay 0% loss) 
Dumping host connections
h1 h1-eth0:s1-eth1
h2 h2-eth0:s1-eth2
h3 h3-eth0:s1-eth3
h4 h4-eth0:s1-eth4
Testing network connectivity
*** Ping: testing ping reachability
h1 -> h2 h3 h4 
h2 -> h1 h3 h4 
h3 -> h1 h2 h4 
h4 -> h1 h2 h3 
*** Results: 0% dropped (12/12 received)
Ping between hosts:
h1->h2
RRT: 1.65891647339ms
h1->h3
RRT: 1.43599510193ms
h1->h4
RRT: 1.060962677ms
h2->h1
RRT: 2.63381004333ms
h2->h3
RRT: 1.49393081665ms
h2->h4
RRT: 1.2891292572ms
h3->h1
RRT: 1.93500518799ms
h3->h2
RRT: 1.2481212616ms
h3->h4
RRT: 1.13296508789ms
h4->h1
RRT: 1.28602981567ms
h4->h2
RRT: 1.06906890869ms
h4->h3
RRT: 1.08289718628ms
Testing bandwidth between every pair of hosts:
Toal host number: 4
*** Iperf: testing TCP bandwidth between h1 and h2 
*** Results: ['8.81 Gbits/sec', '8.83 Gbits/sec']
*** Iperf: testing TCP bandwidth between h1 and h3 
.*** Results: ['8.76 Gbits/sec', '8.61 Gbits/sec']
*** Iperf: testing TCP bandwidth between h1 and h4 
*** Results: ['8.86 Gbits/sec', '9.00 Gbits/sec']
*** Iperf: testing TCP bandwidth between h2 and h3 
*** Results: ['8.77 Gbits/sec', '8.77 Gbits/sec']
*** Iperf: testing TCP bandwidth between h2 and h4 
.*** Results: ['8.78 Gbits/sec', '8.79 Gbits/sec']
*** Iperf: testing TCP bandwidth between h3 and h4 
*** Results: ['8.75 Gbits/sec', '8.76 Gbits/sec']
*** Stopping 1 controllers
c0 
*** Stopping 4 links
....
*** Stopping 1 switches
s1 
*** Stopping 4 hosts
h1 h2 h3 h4 
*** Done
*** Removing excess controllers/ofprotocols/ofdatapaths/pings/noxes
killall controller ofprotocol ofdatapath ping nox_core lt-nox_core ovs-openflowd ovs-controller udpbwtest mnexec ivs 2> /dev/null
killall -9 controller ofprotocol ofdatapath ping nox_core lt-nox_core ovs-openflowd ovs-controller udpbwtest mnexec ivs 2> /dev/null
pkill -9 -f "sudo mnexec"
*** Removing junk from /tmp
rm -f /tmp/vconn* /tmp/vlogs* /tmp/*.out /tmp/*.log
*** Removing old X11 tunnels
*** Removing excess kernel datapaths
ps ax | egrep -o 'dp[0-9]+' | sed 's/dp/nl:/'
***  Removing OVS datapaths
ovs-vsctl --timeout=1 list-br
ovs-vsctl --timeout=1 list-br
*** Removing all links of the pattern foo-ethX
ip link show | egrep -o '([-_.[:alnum:]]+-eth[[:digit:]]+)'
ip link show
*** Killing stale mininet node processes
pkill -9 -f mininet:
*** Shutting down stale tunnels
pkill -9 -f Tunnel=Ethernet
pkill -9 -f .ssh/mn
rm -f ~/.ssh/mn/*
*** Cleanup complete.

#################Linear Topo#####################
*** Creating network
*** Adding controller
*** Adding hosts:
h1 h2 h3 h4 
*** Adding switches:
s1 s2 s3 s4 
*** Adding links:
(h1, s1) (h2, s2) (h3, s3) (h4, s4) (s2, s1) (s3, s2) (s4, s3) 
*** Configuring hosts
h1 (cfs -1/100000us) h2 (cfs -1/100000us) h3 (cfs -1/100000us) h4 (cfs -1/100000us) 
Testing linear topo:
*** Starting controller
c0 
*** Starting 4 switches
s1 s2 s3 s4 ...
Dumping host connections
h1 h1-eth0:s1-eth1
h2 h2-eth0:s2-eth1
h3 h3-eth0:s3-eth1
h4 h4-eth0:s4-eth1
Testing network connectivity
*** Ping: testing ping reachability
h1 -> h2 h3 h4 
h2 -> h1 h3 h4 
h3 -> h1 h2 h4 
h4 -> h1 h2 h3 
*** Results: 0% dropped (12/12 received)
Ping between hosts:
RRT: 1.38902664185ms
RRT: 2.19511985779ms
RRT: 1.50990486145ms
RRT: 1.13010406494ms
RRT: 1.07884407043ms
RRT: 1.1830329895ms
RRT: 1.19400024414ms
RRT: 1.21402740479ms
RRT: 4.91690635681ms
RRT: 1.5971660614ms
RRT: 1.13010406494ms
RRT: 1.4340877533ms
Testing bw between every pair of hosts:
Total host number: 4
*** Iperf: testing TCP bandwidth between h1 and h2 
*** Results: ['47.8 Gbits/sec', '47.8 Gbits/sec']
*** Iperf: testing TCP bandwidth between h1 and h3 
*** Results: ['46.4 Gbits/sec', '46.4 Gbits/sec']
*** Iperf: testing TCP bandwidth between h1 and h4 
*** Results: ['44.7 Gbits/sec', '44.7 Gbits/sec']
*** Iperf: testing TCP bandwidth between h2 and h3 
*** Results: ['49.1 Gbits/sec', '49.1 Gbits/sec']
*** Iperf: testing TCP bandwidth between h2 and h4 
*** Results: ['46.2 Gbits/sec', '46.2 Gbits/sec']
*** Iperf: testing TCP bandwidth between h3 and h4 
.*** Results: ['48.8 Gbits/sec', '48.9 Gbits/sec']
*** Stopping 1 controllers
c0 
*** Stopping 7 links
.......
*** Stopping 4 switches
s1 s2 s3 s4 
*** Stopping 4 hosts
h1 h2 h3 h4 
*** Done
*** Removing excess controllers/ofprotocols/ofdatapaths/pings/noxes
killall controller ofprotocol ofdatapath ping nox_core lt-nox_core ovs-openflowd ovs-controller udpbwtest mnexec ivs 2> /dev/null
killall -9 controller ofprotocol ofdatapath ping nox_core lt-nox_core ovs-openflowd ovs-controller udpbwtest mnexec ivs 2> /dev/null
pkill -9 -f "sudo mnexec"
*** Removing junk from /tmp
rm -f /tmp/vconn* /tmp/vlogs* /tmp/*.out /tmp/*.log
*** Removing old X11 tunnels
*** Removing excess kernel datapaths
ps ax | egrep -o 'dp[0-9]+' | sed 's/dp/nl:/'
***  Removing OVS datapaths
ovs-vsctl --timeout=1 list-br
ovs-vsctl --timeout=1 list-br
*** Removing all links of the pattern foo-ethX
ip link show | egrep -o '([-_.[:alnum:]]+-eth[[:digit:]]+)'
ip link show
*** Killing stale mininet node processes
pkill -9 -f mininet:
*** Shutting down stale tunnels
pkill -9 -f Tunnel=Ethernet
pkill -9 -f .ssh/mn
rm -f ~/.ssh/mn/*
*** Cleanup complete.

#################Tree Topo#######################
*** Creating network
*** Adding controller
*** Adding hosts:
h1 h2 h3 h4 
*** Adding switches:
s1 s2 s3 
*** Adding links:
(s1, s2) (s1, s3) (s2, h1) (s2, h2) (s3, h3) (s3, h4) 
*** Configuring hosts
h1 (cfs -1/100000us) h2 (cfs -1/100000us) h3 (cfs -1/100000us) h4 (cfs -1/100000us) 
Testing tree topo:
*** Starting controller
c0 
*** Starting 3 switches
s1 s2 s3 ...
Dumping host connections
h1 h1-eth0:s2-eth1
h2 h2-eth0:s2-eth2
h3 h3-eth0:s3-eth1
h4 h4-eth0:s3-eth2
Testing network connectivity
*** Ping: testing ping reachability
h1 -> h2 h3 h4 
h2 -> h1 h3 h4 
h3 -> h1 h2 h4 
h4 -> h1 h2 h3 
*** Results: 0% dropped (12/12 received)
Ping between hosts:
RRT: 1.33609771729ms
RRT: 1.16801261902ms
RRT: 1.51586532593ms
RRT: 1.21712684631ms
RRT: 1.26981735229ms
RRT: 1.99389457703ms
RRT: 1.2149810791ms
RRT: 1.03902816772ms
RRT: 1.19018554688ms
RRT: 1.63793563843ms
RRT: 1.27220153809ms
RRT: 1.20401382446ms
Testing bw between every pair of hosts:
Total host number: 4
*** Iperf: testing TCP bandwidth between h1 and h2 
*** Results: ['50.5 Gbits/sec', '50.5 Gbits/sec']
*** Iperf: testing TCP bandwidth between h1 and h3 
*** Results: ['44.9 Gbits/sec', '44.9 Gbits/sec']
*** Iperf: testing TCP bandwidth between h1 and h4 
*** Results: ['44.7 Gbits/sec', '44.8 Gbits/sec']
*** Iperf: testing TCP bandwidth between h2 and h3 
*** Results: ['43.3 Gbits/sec', '43.3 Gbits/sec']
*** Iperf: testing TCP bandwidth between h2 and h4 
*** Results: ['44.2 Gbits/sec', '44.3 Gbits/sec']
*** Iperf: testing TCP bandwidth between h3 and h4 
.*** Results: ['49.9 Gbits/sec', '49.9 Gbits/sec']
*** Stopping 1 controllers
c0 
*** Stopping 6 links
......
*** Stopping 3 switches
s1 s2 s3 
*** Stopping 4 hosts
h1 h2 h3 h4 
*** Done
*** Removing excess controllers/ofprotocols/ofdatapaths/pings/noxes
killall controller ofprotocol ofdatapath ping nox_core lt-nox_core ovs-openflowd ovs-controller udpbwtest mnexec ivs 2> /dev/null
killall -9 controller ofprotocol ofdatapath ping nox_core lt-nox_core ovs-openflowd ovs-controller udpbwtest mnexec ivs 2> /dev/null
pkill -9 -f "sudo mnexec"
*** Removing junk from /tmp
rm -f /tmp/vconn* /tmp/vlogs* /tmp/*.out /tmp/*.log
*** Removing old X11 tunnels
*** Removing excess kernel datapaths
ps ax | egrep -o 'dp[0-9]+' | sed 's/dp/nl:/'
***  Removing OVS datapaths
ovs-vsctl --timeout=1 list-br
ovs-vsctl --timeout=1 list-br
*** Removing all links of the pattern foo-ethX
ip link show | egrep -o '([-_.[:alnum:]]+-eth[[:digit:]]+)'
ip link show
*** Killing stale mininet node processes
pkill -9 -f mininet:
*** Shutting down stale tunnels
pkill -9 -f Tunnel=Ethernet
pkill -9 -f .ssh/mn
rm -f ~/.ssh/mn/*
*** Cleanup complete.
Finished.
